{"version":3,"file":"static/js/699.e5e5c6e4.chunk.js","mappings":"gKACA,SAAgB,sBAAwB,4CAA4C,QAAU,8BAA8B,UAAY,gCAAgC,aAAe,mCAAmC,UAAY,gCAAgC,MAAQ,4BAA4B,aAAe,mCAAmC,eAAiB,sC,iDCO7W,MAmNA,EAnN+BA,KAC7B,MAAMC,GAAYC,EAAAA,EAAAA,IAAcC,GAAUA,EAAMC,QAC1CC,GAAYH,EAAAA,EAAAA,IAAcC,GAAUA,EAAME,YAC1CC,GAAgBJ,EAAAA,EAAAA,IAAcC,GAAUA,EAAMG,gBAC9CC,GAAWC,EAAAA,EAAAA,IAAiBL,GAAUA,EAAMI,WAC5CE,GAAWC,EAAAA,EAAAA,OAEVC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,KAC1BC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,KAC5BG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,KAC5BK,EAAWC,IAAgBN,EAAAA,EAAAA,UAAS,KACpCO,EAAYC,IAAiBR,EAAAA,EAAAA,UAAS,KACtCS,EAAeC,IAAoBV,EAAAA,EAAAA,WAAS,IAC5CW,EAAiBC,IAAsBZ,EAAAA,EAAAA,UAAS,KAChDa,IAASb,EAAAA,EAAAA,UAAS,GAGnBc,EAAcrB,IACdsB,EAAgBN,EAAgBK,EAAcD,EAAQC,EA6G5D,OACEE,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAOC,sBAAsBC,SAAA,EAC3CC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,sBACJJ,EAAAA,EAAAA,MAAA,QAAMM,SA7DYC,IAGpB,GAFAA,EAAMC,iBAzBaC,MACnB,IAAIC,GAAU,EAoBd,OAlBK5B,EAAK6B,SACRrB,EAAa,wCACboB,GAAU,GAGPzB,EAAM0B,OAGC,iBAAiBC,KAAK3B,KAChCO,EAAc,sEACdkB,GAAU,IAJVlB,EAAc,2CACdkB,GAAU,GAMRjB,IAAkBE,EAAgBgB,SACpCE,MAAM,+CACNH,GAAU,GAGLA,CAAO,EAMVD,GAAgB,CAClB,GAAyB,IAArBrC,EAAU0C,OAEZ,YADAD,MAAM,mEAIR,MAAME,EAAe3C,EAClB4C,KAAKC,IACJ,MAAMC,EAAUxC,EAASyC,MAAMC,GAAMA,EAAEC,KAAOJ,EAAKC,QAAQG,KAC3D,IAAKH,EAEH,OADAI,QAAQC,MAAM,kBAAkBN,EAAKC,QAAQG,8CACtC,KAET,MAAMG,EAAU,CAAC,GAAGN,EAAQO,SAI5B,OAHIP,EAAQQ,KACVF,EAAQG,KAAK,mBAAaT,EAAQQ,OAE7B,KAAKT,EAAKW,cAAcV,EAAQpC,SAAS0C,EAAQK,KACtD,gBACUX,EAAQY,MAAQb,EAAKW,UAAUG,QAAQ,IAAI,IAExDC,OAAOC,SACPJ,KAAK,MAEFK,EAAQnC,EAAcgC,QAAQ,GAEpC,IAAII,EAAU,8EAA2ErD,gBAAmBG,QAG1GkD,GADE1C,EACS,iCAA8BE,gBAA8BE,EAAMkC,QAC3E,SAGS,6CAGbI,GAAW,uBAAuBpB,6BAAwCmB,4BAA0B/C,IACpG,MAAMiD,EAAiBC,mBAAmBF,GAC1CG,OAAOC,KAAK,oCAAwCH,IAAkB,UAEtEI,EAAAA,GAAMC,QAAQ,kCAAmC,CAC/CC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,IAGZzE,IACAI,EAAS,kBACX,GAMgCqB,UAAWC,EAAOgD,KAAK9C,SAAA,EACnDJ,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAOiD,QAAQ/C,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kCACJJ,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAOkD,UAAUhD,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,SAAOgD,QAAQ,OAAMjD,SAAC,oBACtBC,EAAAA,EAAAA,KAAA,SACEiD,KAAK,OACLjC,GAAG,OACHvC,KAAK,OACLyE,MAAOzE,EACP0E,SAxHcjD,IACxBxB,EAAQwB,EAAMkD,OAAOF,OACrBjE,EAAa,GAAG,EAuHNoE,UAAQ,IAETrE,IAAagB,EAAAA,EAAAA,KAAA,KAAGJ,UAAWC,EAAOyD,aAAavD,SAAEf,QAEpDW,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAOkD,UAAUhD,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,SAAOgD,QAAQ,QAAOjD,SAAC,yBACvBC,EAAAA,EAAAA,KAAA,SACEiD,KAAK,MACLjC,GAAG,QACHvC,KAAK,QACLyE,MAAOtE,EACPuE,SA/HejD,IACzBrB,EAASqB,EAAMkD,OAAOF,OACtB/D,EAAc,GAAG,EA8HPkE,UAAQ,IAETnE,IAAcc,EAAAA,EAAAA,KAAA,KAAGJ,UAAWC,EAAOyD,aAAavD,SAAEb,WAIvDS,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAOiD,QAAQ/C,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,4BACJC,EAAAA,EAAAA,KAAA,OAAKJ,UAAWC,EAAOkD,UAAUhD,UAC/BJ,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAO0D,mBAAoBP,QAAQ,gBAAejD,SAAA,EAClEC,EAAAA,EAAAA,KAAA,SACEiD,KAAK,WACLjC,GAAG,gBACHvC,KAAK,gBACL+E,QAASpE,EACT+D,SAtIqBjD,IACjCb,EAAiBa,EAAMkD,OAAOI,SACzBtD,EAAMkD,OAAOI,SAChBjE,EAAmB,GACrB,EAmIYK,UAAWC,EAAO4D,sBAEpBzD,EAAAA,EAAAA,KAAA,QAAMJ,UAAWC,EAAO6D,mBAAmB3D,SAAC,yDAK/CX,IACCO,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAOkD,UAAUhD,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,SAAOgD,QAAQ,kBAAiBjD,SAAC,6BACjCC,EAAAA,EAAAA,KAAA,YACEgB,GAAG,kBACHvC,KAAK,kBACLkF,KAAM,EACNT,MAAO5D,EACP6D,SA/IuBjD,IACnCX,EAAmBW,EAAMkD,OAAOF,MAAM,EA+I1BG,UAAQ,OAIbjE,IAAiBO,EAAAA,EAAAA,MAAA,KAAGC,UAAWC,EAAO+D,UAAU7D,SAAA,CAAC,aAAWP,EAAMkC,QAAQ,OAC3E/B,EAAAA,EAAAA,MAAA,KAAGC,UAAWC,EAAOgC,MAAM9B,SAAA,CAAC,WACnBJ,EAAAA,EAAAA,MAAA,UAAAI,SAAA,CAAQ,MAAIL,EAAcgC,QAAQ,aAI7C/B,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAOiD,QAAQ/C,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kCACJJ,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAOkD,UAAUhD,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,SAAOgD,QAAQ,QAAOjD,SAAC,iDACvBC,EAAAA,EAAAA,KAAA,YAAUgB,GAAG,QAAQvC,KAAK,QAAQkF,KAAM,EAAGT,MAAOpE,EAAOqE,SAzKxCjD,IACzBnB,EAASmB,EAAMkD,OAAOF,MAAM,WA4KxBlD,EAAAA,EAAAA,KAAA,UAAQiD,KAAK,SAASrD,UAAWC,EAAOgE,aAAa9D,SAAC,oCAIpD,C","sources":["webpack://catalogo-barbantes/./src/features/checkout/components/CheckoutForm.module.css?f74f","features/checkout/components/CheckoutForm.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"checkoutFormContainer\":\"CheckoutForm_checkoutFormContainer__ajlqa\",\"section\":\"CheckoutForm_section__GD73V\",\"formGroup\":\"CheckoutForm_formGroup__7Pu8v\",\"errorMessage\":\"CheckoutForm_errorMessage__cYV+8\",\"freteInfo\":\"CheckoutForm_freteInfo__VBxbS\",\"total\":\"CheckoutForm_total__C+E2k\",\"submitButton\":\"CheckoutForm_submitButton__1R0SK\",\"deliveryOption\":\"CheckoutForm_deliveryOption__RguGg\"};","// src/features/checkout/components/CheckoutForm.tsx\nimport React, { useState } from 'react'\nimport styles from './CheckoutForm.module.css'\nimport { useNavigate } from 'react-router-dom'\nimport { toast } from 'react-toastify'\nimport { useCartStore } from '../../../store/cartStore' // Importe o Zustand store\nimport { useProductStore } from '../../../store/productStore' // Importe para acessar os produtos\n\nconst CheckoutForm: React.FC = () => {\n  const cartItems = useCartStore((state) => state.items)\n  const clearCart = useCartStore((state) => state.clearCart)\n  const getTotalPrice = useCartStore((state) => state.getTotalPrice)\n  const products = useProductStore((state) => state.products)\n  const navigate = useNavigate()\n\n  const [name, setName] = useState('')\n  const [phone, setPhone] = useState('')\n  const [notes, setNotes] = useState('')\n  const [nameError, setNameError] = useState('')\n  const [phoneError, setPhoneError] = useState('')\n  const [desejaEntrega, setDesejaEntrega] = useState(false)\n  const [enderecoEntrega, setEnderecoEntrega] = useState('')\n  const [frete] = useState(5.0) // Valor fixo do frete\n  const whatsappNumber = '5569992784621'\n\n  const totalCompra = getTotalPrice()\n  const totalComFrete = desejaEntrega ? totalCompra + frete : totalCompra\n\n  const handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value)\n    setNameError('')\n  }\n\n  const handlePhoneChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPhone(event.target.value)\n    setPhoneError('')\n  }\n\n  const handleNotesChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setNotes(event.target.value)\n  }\n\n  const handleDesejaEntregaChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setDesejaEntrega(event.target.checked)\n    if (!event.target.checked) {\n      setEnderecoEntrega('')\n    }\n  }\n\n  const handleEnderecoEntregaChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setEnderecoEntrega(event.target.value)\n  }\n\n  const validateForm = (): boolean => {\n    let isValid = true\n\n    if (!name.trim()) {\n      setNameError('Por favor, digite seu nome completo.')\n      isValid = false\n    }\n\n    if (!phone.trim()) {\n      setPhoneError('Por favor, digite seu telefone com DDD.')\n      isValid = false\n    } else if (!/^\\d{2}\\d{8,9}$/.test(phone)) {\n      setPhoneError('Por favor, digite um telefone válido com DDD (ex: 69999999999).')\n      isValid = false\n    }\n\n    if (desejaEntrega && !enderecoEntrega.trim()) {\n      alert('Por favor, digite o endereço de entrega.')\n      isValid = false\n    }\n\n    return isValid\n  }\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault()\n\n    if (validateForm()) {\n      if (cartItems.length === 0) {\n        alert('Seu carrinho está vazio. Adicione itens para fazer o pedido.')\n        return\n      }\n\n      const orderDetails = cartItems\n        .map((item) => {\n          const product = products.find((p) => p.id === item.product.id)\n          if (!product) {\n            console.error(`Produto com ID ${item.product.id} não encontrado no array de produtos.`)\n            return null\n          }\n          const details = [`${product.color}`]\n          if (product.num) {\n            details.push(`Numeração ${product.num}`)\n          }\n          return `- ${item.quantity} x ${product.name} (${details.join(\n            ', '\n          )}) - R$ ${(product.price * item.quantity).toFixed(2)}`\n        })\n        .filter(Boolean)\n        .join('\\n')\n\n      const total = totalComFrete.toFixed(2)\n\n      let message = `Olá! Gostaria de fazer o seguinte pedido:\\n\\n*Dados do Cliente:*\\nNome: ${name}\\nTelefone: ${phone}\\n\\n`\n\n      if (desejaEntrega) {\n        message += `*Entrega:*\\nSim\\nEndereço: ${enderecoEntrega}\\nFrete: R$ ${frete.toFixed(\n          2\n        )}\\n\\n`\n      } else {\n        message += `*Entrega:*\\nNão (Retirada no local)\\n\\n`\n      }\n\n      message += `*Itens do Pedido:*\\n${orderDetails}\\n\\n*Total do Pedido: R$ ${total}*\\n\\nObservações: ${notes}`\n      const encodedMessage = encodeURIComponent(message)\n      window.open(`https://wa.me/${whatsappNumber}?text=${encodedMessage}`, '_blank')\n\n      toast.success('Pedido enviado para o WhatsApp!', {\n        position: 'top-right',\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      })\n\n      clearCart()\n      navigate('/pedido-enviado')\n    }\n  }\n\n  return (\n    <div className={styles.checkoutFormContainer}>\n      <h1>Finalizar Pedido</h1>\n      <form onSubmit={handleSubmit} className={styles.form}>\n        <div className={styles.section}>\n          <h2>Informações de Contato</h2>\n          <div className={styles.formGroup}>\n            <label htmlFor=\"name\">Nome Completo:</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              value={name}\n              onChange={handleNameChange}\n              required\n            />\n            {nameError && <p className={styles.errorMessage}>{nameError}</p>}\n          </div>\n          <div className={styles.formGroup}>\n            <label htmlFor=\"phone\">Telefone (com DDD):</label>\n            <input\n              type=\"tel\"\n              id=\"phone\"\n              name=\"phone\"\n              value={phone}\n              onChange={handlePhoneChange}\n              required\n            />\n            {phoneError && <p className={styles.errorMessage}>{phoneError}</p>}\n          </div>\n        </div>\n\n        <div className={styles.section}>\n          <h2>Opção de Entrega</h2>\n          <div className={styles.formGroup}>\n            <label className={styles.entregaEmCasaLabel} htmlFor=\"desejaEntrega\">\n              <input\n                type=\"checkbox\"\n                id=\"desejaEntrega\"\n                name=\"desejaEntrega\"\n                checked={desejaEntrega}\n                onChange={handleDesejaEntregaChange}\n                className={styles.entregaEmCasaInput}\n              />\n              <span className={styles.entregaEmCasaTexto}>\n                Deseja que o produto seja entregue em sua casa?\n              </span>\n            </label>\n          </div>\n          {desejaEntrega && (\n            <div className={styles.formGroup}>\n              <label htmlFor=\"enderecoEntrega\">Endereço de Entrega:</label>\n              <textarea\n                id=\"enderecoEntrega\"\n                name=\"enderecoEntrega\"\n                rows={3}\n                value={enderecoEntrega}\n                onChange={handleEnderecoEntregaChange}\n                required\n              />\n            </div>\n          )}\n          {desejaEntrega && <p className={styles.freteInfo}>Frete: R$ {frete.toFixed(2)}</p>}\n          <p className={styles.total}>\n            Total: <strong>R$ {totalComFrete.toFixed(2)}</strong>\n          </p>\n        </div>\n\n        <div className={styles.section}>\n          <h2>Observações Adicionais</h2>\n          <div className={styles.formGroup}>\n            <label htmlFor=\"notes\">Alguma observação sobre o seu pedido?</label>\n            <textarea id=\"notes\" name=\"notes\" rows={3} value={notes} onChange={handleNotesChange} />\n          </div>\n        </div>\n\n        <button type=\"submit\" className={styles.submitButton}>\n          Enviar Pedido via WhatsApp\n        </button>\n      </form>\n    </div>\n  )\n}\n\nexport default CheckoutForm\n"],"names":["CheckoutForm","cartItems","useCartStore","state","items","clearCart","getTotalPrice","products","useProductStore","navigate","useNavigate","name","setName","useState","phone","setPhone","notes","setNotes","nameError","setNameError","phoneError","setPhoneError","desejaEntrega","setDesejaEntrega","enderecoEntrega","setEnderecoEntrega","frete","totalCompra","totalComFrete","_jsxs","className","styles","checkoutFormContainer","children","_jsx","onSubmit","event","preventDefault","validateForm","isValid","trim","test","alert","length","orderDetails","map","item","product","find","p","id","console","error","details","color","num","push","quantity","join","price","toFixed","filter","Boolean","total","message","encodedMessage","encodeURIComponent","window","open","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","form","section","formGroup","htmlFor","type","value","onChange","target","required","errorMessage","entregaEmCasaLabel","checked","entregaEmCasaInput","entregaEmCasaTexto","rows","freteInfo","submitButton"],"sourceRoot":""}